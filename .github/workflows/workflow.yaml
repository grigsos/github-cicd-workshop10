name: Test and Update Badge

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Run tests
      run: |
        pytest --junitxml=result.xml exercise_2
      continue-on-error: true

    - name: Check test result
      id: check
      run: |
        if grep -q "<failure" result.xml; then
          echo "status=failing" >> $GITHUB_ENV
        else
          echo "status=passing" >> $GITHUB_ENV
        fi

    - name: Update README with badge
      run: |
        if [ "${{ steps.check.outputs.status }}" = "passing" ]; then
          badge_url="https://img.shields.io/badge/tests-passing-brightgreen"
        else
          badge_url="https://img.shields.io/badge/tests-failing-red"
        fi
        readme_path="README.md"
        actions_url="https://github.com/${{ github.repository }}/actions/workflows/test-and-badge.yml"
        badge_md="[![Test Status](${badge_url})](${actions_url})"
        sed -i 's|\[!\[Test Status\](.*)\](.*)|'"$badge_md"'|g' $readme_path

    - name: Commit updated README
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add README.md
        git commit -m "Update test status badge [skip ci]"
        git push origin HEAD:master
      if: always()